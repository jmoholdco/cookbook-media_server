provides 'nginx'
provides 'nginx/version'
provides 'nginx/configure_arguments'
provides 'nginx/prefix'
provides 'nginx/conf_path'

def parse_flags(flags)
  prefix = nil
  conf_path = nil

  flags.each do |flag|
    case flag
    when /^--previx=(.+)$/
      prefix = $1
    when /^--conf-path=(.+)$/
      conf_path = $1
    end
  end

  [prefix, conf_path]
end

nginx Mash.new unless nginx
nginx[:version]             = nil unless nginx[:version]
nginx[:configure_arguments] = [] unless nginx[:configure_arguments]
nginx[:prefix]              = nil unless nginx[:prefix]
nginx[:conf_path]           = nil unless nginx[:conf_path]

status, _stdout, stderr = run_command(
  no_status_check: true,
  command: "<%= node['nginx']['binary'] %> -V"
)

if status == 0
  stderr.split("\n").each do |line|
    case line
    when /^configure arguments(.+)/

      nginx[:configure_arguments] = $1.split(/\s--/).drop(1).map { |ca| "--#{ca}" }

      prefix, conf_path = parse_flags(nginx[:configure_arguments])

      nginx[:prefix] = prefix
      nginx[:conf_path] = conf_path
    when /^nginx version: nginx\/(\d+\.\d+\.\d+)/
      nginx[:version] = $1
    end
  end
end

#  vim: set ts=8 sw=2 tw=0 ft=ruby et :
